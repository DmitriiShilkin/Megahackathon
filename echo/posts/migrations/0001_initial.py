# Generated by Django 4.2.7 on 2023-11-18 11:28

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import profile.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('profile', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, unique=True, verbose_name='Название')),
                ('subscribers', models.ManyToManyField(blank=True, related_name='categories', to='profile.profile', verbose_name='Подписчики')),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('modified', models.DateTimeField(blank=True, null=True, verbose_name='Дата изменения')),
                ('text', models.CharField(max_length=254, verbose_name='Комментарий')),
            ],
            options={
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='Ip',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip', models.CharField(max_length=100, verbose_name='IP')),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('published', models.DateTimeField(blank=True, null=True, verbose_name='Дата публикации')),
                ('modified', models.DateTimeField(blank=True, null=True, verbose_name='Дата измнения')),
                ('headline', models.CharField(max_length=254, verbose_name='Заголовок')),
                ('text', models.TextField(validators=[django.core.validators.MinLengthValidator(50, 'Это поле должно содержать минимум 50 символов')], verbose_name='Содержание')),
                ('image', models.ImageField(blank=True, null=True, upload_to=profile.models.get_image_path, verbose_name='Изображение')),
                ('is_published', models.BooleanField(default=False, verbose_name='Опубликован')),
                ('rating', models.FloatField(default=0.0, verbose_name='Рейтинг')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='profile.profile', verbose_name='Автор')),
                ('category', models.ManyToManyField(related_name='posts', to='posts.category', verbose_name='Категория')),
                ('favourite', models.ManyToManyField(blank=True, related_name='favourite_posts', to='profile.profile', verbose_name='Избранное')),
                ('views', models.ManyToManyField(blank=True, related_name='post_views', to='posts.ip', verbose_name='Просмотры')),
            ],
            options={
                'ordering': ('-published', '-created'),
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('modified', models.DateTimeField(blank=True, null=True, verbose_name='Дата изменения')),
                ('headline', models.CharField(max_length=254, verbose_name='Заголовок')),
                ('text', models.TextField(validators=[django.core.validators.MinLengthValidator(20, 'Это поле должно содержать минимум 20 символов')], verbose_name='Содержание')),
                ('rating', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Оценка')),
                ('image', models.ImageField(blank=True, null=True, upload_to=profile.models.get_image_path, verbose_name='Изображение')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='posts.post', verbose_name='Публикация')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='profile.profile', verbose_name='Пользователь')),
            ],
            options={
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='Vote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('modified', models.DateTimeField(blank=True, null=True, verbose_name='Дата изменения')),
                ('value', models.SmallIntegerField(choices=[(-1, 'Не нравится'), (1, 'Нравится')], verbose_name='Голос')),
                ('comment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='posts.comment', verbose_name='Комментарий')),
                ('post', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='posts.post', verbose_name='Публикация')),
                ('review', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='posts.review', verbose_name='Отзыв')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='profile.profile', verbose_name='Пользователь')),
            ],
        ),
        migrations.AddField(
            model_name='comment',
            name='post',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='posts.post', verbose_name='Публикация'),
        ),
        migrations.AddField(
            model_name='comment',
            name='review',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='posts.review', verbose_name='Отзыв'),
        ),
        migrations.AddField(
            model_name='comment',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='profile.profile', verbose_name='Пользователь'),
        ),
    ]
